name: test_coverage

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.PAT}}
      CC: clang
      CXX: clang++

    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-r@v2-branch
        with:
          r-version: '3.6'
      - uses: r-lib/actions/setup-pandoc@v2-branch
      - uses: r-lib/actions/setup-tinytex@v2-branch

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: MacOS Config
        run: |
          brew update
          brew install pkg-config
          brew install gdal
          module load llvm/15.0.0  # Load the Clang module
          export PATH="/usr/local/opt/llvm@15/bin:$PATH"

      - name: Install dependencies
        run: |
          install.packages(c("remotes","rcmdcheck"), repos = "https://cloud.r-project.org")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Test coverage
        run: |
          remotes::install_cran("covr")
          export PATH="/usr/local/opt/llvm@15/bin:$PATH"
          R CMD INSTALL --configure-args="--with-clang" .
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      - name: Check for failures
        if: failure()
        run: exit 1
